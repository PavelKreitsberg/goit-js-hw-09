{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,UAAWC,SAASC,cAAc,UAClCC,WAAYF,SAASC,cAAc,kBACnCE,UAAWH,SAASC,cAAc,iBAClCG,YAAaJ,SAASC,cAAc,oBAGhCI,EAAW,CACfC,MAAO,EACPC,KAAM,EACNC,OAAQ,GAGJC,EAAkB,SAACC,GAAQL,EAASK,EAAEC,OAAOC,MAAQC,OAAOH,EAAEC,OAAOG,QAE3E,SAASC,EAAcC,EAAUV,GAC/B,IAAMW,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQzB,EAAA4B,OAAOC,QAAQ,qBAAoCC,OAAfV,EAAS,QAAYU,OAANpB,EAAM,QAEjEgB,EAAO1B,EAAA4B,OAAOG,QAAQ,qBAAoCD,OAAfV,EAAS,QAAYU,OAANpB,EAAM,UAEjEA,MAIPR,EAAKI,WAAW0B,iBAAiB,QAASnB,GAE1CX,EAAKK,UAAUyB,iBAAiB,QAASnB,GAEzCX,EAAKM,YAAYwB,iBAAiB,QAASnB,GAE3CX,EAAKC,UAAU6B,iBAAiB,SAAS,SAAClB,GACxCA,EAAEmB,iBAEF,IAAK,IAAIC,EAAI,EAAGA,GAAKzB,EAASG,OAAQsB,GAAK,EACzCf,EAAce,EAAGzB,EAASC,OACzByB,MAAK,SAAAjB,OACLkB,OAAM,SAAAC,OAEP5B,EAASC,OAASD,EAASE,Q","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  submitBtn: document.querySelector('button'),\n  delayInput: document.querySelector('[name=\"delay\"]'),\n  stepInput: document.querySelector('[name=\"step\"]'),\n  amountInput: document.querySelector('[name=\"amount\"]'),\n}\n\nconst formData = {\n  delay: 0,\n  step: 0,\n  amount: 0,\n}\n\nconst takingInputInfo = (e) => { formData[e.target.name] = Number(e.target.value); }\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(Notify.success(`Fulfilled promise ${position} in ${delay}ms`)) \n      } else {\n        reject(Notify.failure(`Fulfilled promise ${position} in ${delay}ms`)) \n      }\n    }, delay )\n  })\n}\n\nrefs.delayInput.addEventListener('input', takingInputInfo);\n\nrefs.stepInput.addEventListener('input', takingInputInfo);\n\nrefs.amountInput.addEventListener('input', takingInputInfo);\n\nrefs.submitBtn.addEventListener('click', (e) => {\n  e.preventDefault()\n\n  for (let i = 1; i <= formData.amount; i += 1) {\n    createPromise(i, formData.delay)\n    .then(value => {})\n    .catch(error => {}); \n  \n    formData.delay += formData.step;\n  }  \n})"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","submitBtn","document","querySelector","delayInput","stepInput","amountInput","$ce04d3a99e08e73b$var$formData","delay","step","amount","$ce04d3a99e08e73b$var$takingInputInfo","e","target","name","Number","value","$ce04d3a99e08e73b$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","Notify","success","concat","failure","addEventListener","preventDefault","i","then","catch","error"],"version":3,"file":"03-promises.73fff709.js.map"}